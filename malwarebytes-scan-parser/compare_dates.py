from get_date import GetCurrentDate

class CompareDates:

    def __init__(self, xmlContent):
        self.childDict = {}

        # get the child fields from the XML data provided
        for child in xmlContent[1]:
            self.childDict[child.tag] = child.text

    @staticmethod
    def convertChild(text):
        # replace characters in output for comparison
        replaceText = text.replace(".", "-", 2).replace("v", "")
        slicedText = replaceText[:-3]
        return slicedText

    def malwareDB(self):
        for key in self.childDict.keys():
            if key == 'malware-database':
                # update the XML date format to align with datetime module
                updatedDate = self.convertChild(self.childDict['malware-database'])
                # define time since malware db was updated
                getTodayDate = GetCurrentDate()
                if updatedDate < GetCurrentDate.dateToday:
                    print(True)

                # if sliceChild < convertCurrentDayToStr(dateTodayObj):
                #     convertChildDate = convertDateToInt(sliceChild)
                #     convertDayDate = convertDateToInt(convertCurrentDayToStr(dateTodayObj))
                #     dateDiff = numOfDaysDifference(convertDayDate, convertChildDate)
                #     print(f'The malware database is {dateDiff} days old')
                # else:
                #     print('The malware database is current')